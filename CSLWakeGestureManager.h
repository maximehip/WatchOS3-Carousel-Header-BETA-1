//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CMWakeGestureDelegate.h"

@class CMWakeGestureManager, CSLPISystemSleepObserver, CSLPITimedPowerAssertion, CSLUIUserSpecifiedOrientation, NSObject<OS_dispatch_queue>, NSPointerArray, NSString, NSTimer;

@interface CSLWakeGestureManager : NSObject <CMWakeGestureDelegate>
{
    int _wakeGestureTimeMS;
    int _sleepGestureTimeMS;
    int _wakeGestureEnabled;
    _Bool _userIdle;
    _Bool _shouldNotifyNextUnidle;
    _Bool _didNotifySinceScreenOn;
    _Bool _sleepGestureDisabled;
    _Bool _screenOn;
    _Bool _allowSleep;
    _Bool _processingWakeGesture;
    CMWakeGestureManager *_wakeGestureManager;
    NSTimer *_unidleTimer;
    CSLUIUserSpecifiedOrientation *_orientationSettings;
    NSPointerArray *_observers;
    NSTimer *_wakeGesturePreferenceLoggingTimer;
    NSObject<OS_dispatch_queue> *_notifyQueue;
    CSLPISystemSleepObserver *_sleepObserver;
    CSLPITimedPowerAssertion *_idleSleepAssertion;
}

+ (id)sharedInstance;
@property(retain) CSLPITimedPowerAssertion *idleSleepAssertion; // @synthesize idleSleepAssertion=_idleSleepAssertion;
@property _Bool processingWakeGesture; // @synthesize processingWakeGesture=_processingWakeGesture;
@property(getter=sleepIsAllowed) _Bool allowSleep; // @synthesize allowSleep=_allowSleep;
@property(retain, nonatomic) CSLPISystemSleepObserver *sleepObserver; // @synthesize sleepObserver=_sleepObserver;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *notifyQueue; // @synthesize notifyQueue=_notifyQueue;
@property(retain, nonatomic) NSTimer *wakeGesturePreferenceLoggingTimer; // @synthesize wakeGesturePreferenceLoggingTimer=_wakeGesturePreferenceLoggingTimer;
@property(nonatomic) _Bool screenOn; // @synthesize screenOn=_screenOn;
@property _Bool sleepGestureDisabled; // @synthesize sleepGestureDisabled=_sleepGestureDisabled;
@property(retain) NSPointerArray *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) CSLUIUserSpecifiedOrientation *orientationSettings; // @synthesize orientationSettings=_orientationSettings;
@property(retain, nonatomic) NSTimer *unidleTimer; // @synthesize unidleTimer=_unidleTimer;
@property _Bool didNotifySinceScreenOn; // @synthesize didNotifySinceScreenOn=_didNotifySinceScreenOn;
@property _Bool shouldNotifyNextUnidle; // @synthesize shouldNotifyNextUnidle=_shouldNotifyNextUnidle;
@property(getter=isUserIdle) _Bool userIdle; // @synthesize userIdle=_userIdle;
@property(retain, nonatomic) CMWakeGestureManager *wakeGestureManager; // @synthesize wakeGestureManager=_wakeGestureManager;
- (void).cxx_destruct;
- (void)_logSleepGestureBlocked;
- (void)_logEndOfGesture:(id)arg1;
- (id)_sleepGestureDate;
- (double)_sleepTimeInterval;
- (void)_logSleepGestureTime;
- (id)_wakeGestureDate;
- (double)_wakeTimeInterval;
- (void)_logStartGestureTimer;
- (unsigned long long)_machTimeInMS;
- (void)wristOrientationChanged;
- (void)crownOrientationChanged;
- (void)_backlightDidChange:(id)arg1;
- (void)_scheduleUnidleTimer;
- (void)_postUserActivityIfNeeded;
- (void)_unidleTimerFired:(id)arg1;
- (void)_userActivityUnidle;
- (void)_userActivityIdle;
- (void)sleepGestureDetected;
- (void)_releaseIdleSleepAssertion;
- (void)_takeIdleSleepAssertion;
- (void)_stopProcessingWakeGesture;
- (void)wakeGestureDetected;
- (void)_postNotificationForGesture:(int)arg1;
- (void)wakeGestureManager:(id)arg1 didUpdateWakeGesture:(int)arg2;
- (id)init;
- (void)_loadIdleSleepPreference;
- (void)_loadWakeGesturePreference;
- (void)_logWakeGesturePreference;
- (void)_wakeGesturePreferenceLoggingTimerFired:(id)arg1;
- (void)_setWakeGesturePreferenceLoggingTimer;
- (void)dealloc;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)enableSleepGesture;
- (void)disableSleepGesture;
- (void)startWakeGestureUpdates;
- (void)stopWakeGestureUpdates;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

