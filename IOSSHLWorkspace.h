//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "BSTransactionObserver.h"
#import "BSWatchdogDelegate.h"
#import "CSLPIRestrictedApplicationsObserver.h"
#import "FBApplicationProcessObserver.h"
#import "FBProcessManagerObserver.h"
#import "FBSceneManagerObserver.h"
#import "FBSystemServiceDelegate.h"
#import "IOSSHLTransactionWatchdogDelegate.h"

@class BSTransaction, CSLWorkspaceActionPolicy, CSLWorkspaceTransitionRequest, FBScene, FBSceneManager, FBWorkspaceEventQueue, FBWorkspaceEventQueueLock, IOSSHLTransactionWatchdog, IOSSHLTransactionWatchdogHandler, NSMutableArray, NSString, NSTimer;

@interface IOSSHLWorkspace : NSObject <BSTransactionObserver, FBSystemServiceDelegate, FBProcessManagerObserver, FBApplicationProcessObserver, BSWatchdogDelegate, FBSceneManagerObserver, IOSSHLTransactionWatchdogDelegate, CSLPIRestrictedApplicationsObserver>
{
    NSTimer *_relaunchTimer;
    NSMutableArray *_applicationsToRelaunch;
    FBWorkspaceEventQueue *_eventQueue;
    FBWorkspaceEventQueueLock *_eventQueueLock;
    IOSSHLTransactionWatchdog *_transactionWatchdog;
    FBSceneManager *_sceneManager;
    FBScene *_occlusionScene;
    NSMutableArray *_applicationLaunchSupressionAssertions;
    CSLWorkspaceActionPolicy *_actionPolicy;
    id <CSLUIStateProviding> _UIStateProvider;
    id <CSLWorkspaceRequestHandling> _workspaceRequestHandler;
    id <IOSSHLWorkspaceTransitionRequestValidator> _transitionRequestValidator;
    CSLWorkspaceTransitionRequest *_activeTransitionRequest;
    _Bool _underLock;
    id <IOSSHLWorkspaceUIDelegate> _delegate;
    BSTransaction *_currentTransaction;
    IOSSHLTransactionWatchdogHandler *_watchdogHandler;
}

+ (void)noteSystemBootComplete;
+ (void)saveUsageTimes;
+ (void)loadUsageTimes;
+ (void)resetBatteryUsageTimes;
+ (void)startUsageTimesIfNecessary;
+ (void)setHavePartiallyCharged:(_Bool)arg1;
+ (_Bool)haveChargedPartially;
+ (_Bool)areUsageTimesTrusted;
+ (double)getBatteryStandbyTimeInSeconds;
+ (double)getBatteryUsageTimeInSeconds;
+ (id)_copyRecentSleepsAndWakes;
+ (void)logUsage:(_Bool)arg1;
+ (_Bool)shutdownCookieExists;
+ (void)removeShutdownCookie;
+ (void)createShutdownCookie;
+ (_Bool)isRelaunchingRebootingOrShuttingDown;
+ (void)rebootWhenFinishedTerminating:(_Bool)arg1;
+ (void)shutDownWhenFinishedTerminating:(_Bool)arg1;
+ (void)relaunchWhenFinishedTerminating:(_Bool)arg1;
+ (_Bool)hasStartedWake;
+ (_Bool)isSleeping;
+ (_Bool)finishedBoot;
+ (id)applicationForURL:(id)arg1 isPublic:(_Bool)arg2 outError:(int *)arg3 outURL:(id *)arg4;
+ (id)applicationForBundleIdentifier:(id)arg1 frontmost:(_Bool)arg2;
+ (_Bool)signatureTrustedForApplication:(id)arg1;
+ (void)_shutdownTasks;
+ (_Bool)isAppWithBundleIDRunning:(id)arg1;
@property(readonly, nonatomic) IOSSHLTransactionWatchdogHandler *watchdogHandler; // @synthesize watchdogHandler=_watchdogHandler;
@property(retain, nonatomic) BSTransaction *currentTransaction; // @synthesize currentTransaction=_currentTransaction;
@property(nonatomic, getter=isUnderLock) _Bool underLock; // @synthesize underLock=_underLock;
@property(nonatomic) __weak id <IOSSHLWorkspaceUIDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)activeTransitionRequest;
- (_Bool)_preflightTransitionRequest:(id)arg1;
- (id)_transitionCoordinatorForRequest:(id)arg1;
- (id)transactionForTransitionRequest:(id)arg1;
- (void)_prepareTransitionContextForRequest:(id)arg1;
- (_Bool)_executeTransitionRequest:(id)arg1;
- (_Bool)executeTransitionRequest:(id)arg1 withValidator:(CDUnknownBlockType)arg2;
- (_Bool)executeTransitionRequest:(id)arg1;
- (id)transitionRequestValidator;
- (void)setTransitionRequestValidator:(id)arg1;
- (id)workspaceRequestHandler;
- (void)setWorkspaceRequestHandler:(id)arg1;
- (id)UIStateProvider;
- (void)setUIStateProvider:(id)arg1;
- (void)restrictedApplications:(id)arg1 didChangeRestricted:(id)arg2 unrestricted:(id)arg3;
- (_Bool)hasApplicationLaunchSupressionAssertion;
- (void)removeApplicationLaunchSupressionAssertion:(id)arg1;
- (void)addApplicationLaunchSupressionAssertion:(id)arg1;
- (void)watchdog:(id)arg1 timerFireDeclinedForReason:(id)arg2;
- (_Bool)watchdogShouldFire:(id)arg1 declineReason:(id *)arg2;
- (void)watchdogFired:(id)arg1;
- (void)transactionDidComplete:(id)arg1;
- (void)systemService:(id)arg1 handleActions:(id)arg2 origin:(id)arg3 withResult:(CDUnknownBlockType)arg4;
- (void)systemServicePrepareForExit:(id)arg1 andRelaunch:(_Bool)arg2;
- (void)systemServicePrepareForShutdown:(id)arg1 andReboot:(_Bool)arg2;
- (void)_handleOpenURLRequest:(id)arg1 application:(id)arg2 options:(id)arg3 origin:(id)arg4 withResult:(CDUnknownBlockType)arg5;
- (void)systemService:(id)arg1 handleOpenApplicationRequest:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (void)_handleOpenApplicationRequest:(id)arg1 options:(id)arg2 origin:(id)arg3 withResult:(CDUnknownBlockType)arg4;
- (void)systemService:(id)arg1 canActivateApplication:(id)arg2 withResult:(CDUnknownBlockType)arg3;
- (void)applicationProcessDebuggingStateDidChange:(id)arg1;
- (void)applicationProcessDidExit:(id)arg1 withContext:(id)arg2;
- (void)applicationProcessDidLaunch:(id)arg1;
- (void)applicationProcessWillLaunch:(id)arg1;
- (void)applicationProcessDidFailToLaunch:(id)arg1;
- (void)process:(id)arg1 stateDidChangeFromState:(id)arg2 toState:(id)arg3;
- (void)processManager:(id)arg1 didRemoveProcess:(id)arg2;
- (void)processManager:(id)arg1 didAddProcess:(id)arg2;
- (void)sceneManager:(id)arg1 didDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 willDestroyScene:(id)arg2;
- (void)sceneManager:(id)arg1 didCommitUpdateForScene:(id)arg2 transactionID:(unsigned int)arg3;
- (void)sceneManager:(id)arg1 willCommitUpdateForScene:(id)arg2 transactionID:(unsigned int)arg3;
- (void)sceneManager:(id)arg1 willUpdateScene:(id)arg2 withSettings:(id)arg3 transitionContext:(id)arg4;
- (void)sceneManager:(id)arg1 didCreateScene:(id)arg2 withClient:(id)arg3;
- (id)topActiveOrActivatingApplication;
- (id)topActivatingApplication;
- (id)runningApps;
- (void)_createOcclusionScene;
- (id)_occlusionScene;
- (id)_workspaceEventForExitedApplication:(id)arg1 eventLabel:(id)arg2;
- (id)_selectTransactionForAppRelaunch:(id)arg1;
- (_Bool)_applicationProcessExited:(id)arg1 withContext:(id)arg2;
- (_Bool)_handleSetupExited:(id)arg1;
- (void)executeOrAppendTransaction:(id)arg1 withName:(id)arg2;
- (void)tearDownNow;
- (void)relaunchNow;
- (void)shutDownNow:(_Bool)arg1;
- (void)terminateAllApps;
- (void)terminateApplication:(id)arg1 withReason:(int)arg2 report:(_Bool)arg3 description:(id)arg4;
- (void)killAllApps:(_Bool)arg1;
- (void)killActiveApps:(_Bool)arg1 crashDump:(_Bool)arg2;
- (void)forceQuitApplication:(id)arg1 description:(id)arg2;
- (void)killApplication:(id)arg1 description:(id)arg2;
- (void)suspendApplication:(id)arg1;
- (_Bool)activateShellWithInterruption:(_Bool)arg1;
- (_Bool)hasForegroundApplication;
- (_Bool)suspendAllPresentations;
- (_Bool)activateApplication:(id)arg1;
- (_Bool)activateApplication:(id)arg1 withActions:(id)arg2 resultBlock:(CDUnknownBlockType)arg3;
- (_Bool)isPresentationALockVunerability:(id)arg1 withURL:(id)arg2;
- (void)testSetOutError:(int *)arg1 toCode:(int)arg2;
- (unsigned int)launchErrorsForApplication:(id)arg1 launchIntoBackground:(_Bool)arg2 url:(id)arg3 error:(int *)arg4;
- (_Bool)activateApplicationIdempotent:(id)arg1;
- (_Bool)activateApplicationSuspended:(id)arg1;
- (id)topActiveApplication;
- (id)foregroundApplications;
- (id)applicationsForScenes:(id)arg1;
- (id)foregroundApplicationScenes;
- (_Bool)isUsingExternalAccessory:(id)arg1;
- (_Bool)isAppExecutableRunning:(id)arg1;
- (void)failCurrentTransactionAfterUserCanceledLaunch;
- (_Bool)shouldAllowAppLaunch;
- (_Bool)isBusy;
- (_Bool)isBusyForTransaction;
- (void)_invalidateRelaunchTimer;
- (void)_launchNextPendedAutoLaunchApp;
- (void)_scheduleRelaunchTimerIfNecessary;
- (void)_memoryPressureRelieved:(id)arg1;
- (void)_memoryPressureWarn:(id)arg1;
- (void)scheduleWatchdogWithTransaction:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned int hash;
@property(readonly) Class superclass;

@end

